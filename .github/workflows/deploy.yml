name: CI/CD Pipeline for Spring Boot and React Project

on:
  push:
    branches:
      - deploy
  pull_request:
    branches:
      - deploy

jobs:
  build-back:
    runs-on: ubuntu-latest 
    steps:
      - name: Check out code
        uses: actions/checkout@v2 

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Build Spring Boot App and docker image 
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
          cd /home/ec2-user/tripDuo/back/tripDuo &&
          mvn package -Dmaven.test.skip=true &&
          sudo docker build -t tripduo-image:latest .
          "

  build-front:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
      
      - name: Build React App
        run: |
          ssh -o StrictHostKeyChecking=no \
              -o ServerAliveInterval=60 \
              -o ServerAliveCountMax=5 \
              ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
          cd /home/ec2-user/tripDuo/front &&
          npm install &&
          NODE_OPTIONS='--max_old_space_size=4096' npm run build
          "

  deploy:
    runs-on: ubuntu-latest
    needs: [build-back, build-front]
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy Docker container and nginx service restart 
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
          sudo systemctl restart nginx && 
          sudo docker stop tripduo-container || true &&
          sudo docker rm tripduo-container || true &&
          sudo docker run -d --name tripduo-container -p 8888:8888 tripduo-image:latest
          "
